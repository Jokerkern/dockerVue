{"remainingRequest":"/home/p/logsystem/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/p/logsystem/src/views/About.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/p/logsystem/src/views/About.vue","mtime":1641368267781},{"path":"/home/p/logsystem/node_modules/css-loader/dist/cjs.js","mtime":1641372093372},{"path":"/home/p/logsystem/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1641372093156},{"path":"/home/p/logsystem/node_modules/postcss-loader/src/index.js","mtime":1641372092016},{"path":"/home/p/logsystem/node_modules/cache-loader/dist/cjs.js","mtime":1641372091064},{"path":"/home/p/logsystem/node_modules/vue-loader/lib/index.js","mtime":1641372092460}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5ob21lIC50b3RhbCB7CiAgZGlzcGxheTogZmxleDsgLyrlr7nkuo7kuIDooYzkvJroh6rliqjlvLnmgKfluIPlsYAqLwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgLyrooajnpLrmsLTlubPkuKTnq6/lr7npvZDvvIxqdXN0aWZ5LWNvbnRlbnTvvJrmsLTlubPlr7npvZDnmoTmlrnlvI8qLwp9Ci5ob21lIC5udW0gewogIGRpc3BsYXk6IGZsZXg7IC8q5a+55LqO5LiA6KGM5Lya6Ieq5Yqo5by55oCn5biD5bGAKi8KICBmbGV4LXdyYXA6IHdyYXA7IC8q5a+55LqONuS4quaooeWdl+mcgOimgeaNouihjCovCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyAvKuihqOekuuawtOW5s+S4pOerr+Wvuem9kO+8jGp1c3RpZnktY29udGVudO+8muawtOW5s+Wvuem9kOeahOaWueW8jyovCn0KCi5ob21lIC5udW0gLmVsLWNhcmQgewogIHdpZHRoOiAzMiU7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsgLyrmqKHlnZfkuYvliY3mnInpl7TpmpQqLwp9CgouaG9tZSAuZ3JhcGggewogIGRpc3BsYXk6IGZsZXg7IC8q5a+55LqO5LiA6KGM5Lya6Ieq5Yqo5by55oCn5biD5bGAKi8KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IC8q6KGo56S65rC05bmz5Lik56uv5a+56b2Q77yManVzdGlmeS1jb250ZW5077ya5rC05bmz5a+56b2Q55qE5pa55byPKi8KfQoKLmhvbWUgLmdyYXBoIC5lbC1jYXJkIHsKICB3aWR0aDogMTAwJTsKICBtYXJnaW4tdG9wOiAyMHB4OyAvKuaooeWdl+S5i+WJjeaciemXtOmalCovCn0K"},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"About.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"about\">\n    <SideMenu class=\"about-left\"></SideMenu>\n    <div class=\"about-right\">\n      <el-row class=\"home\" :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-card shadow=\"hover\" style=\"height: 200px\">\n            <div class=\"total\">\n              <div>\n                <p style=\"line-height: 0px; font-size: 10px\">所有日志</p>\n                <p style=\"line-height: 0px; font-size: 30px\">\n                  {{ this.lsSqlTotal }}\n                </p>\n                <p style=\"color: green\">\n                  ▲{{ this.lsSqlTotal - this.sqlTotal }}({{\n                    ((this.lsSqlTotal - this.sqlTotal) / 10000).toFixed(2)\n                  }}%)\n                </p>\n              </div>\n              <div style=\"border: 1px solid #000; height: 110px\" />\n              <div>\n                <p style=\"line-height: 0px; font-size: 10px\">缓存日志</p>\n                <p style=\"line-height: 0px; font-size: 30px\">\n                  {{ this.lsTotal }}\n                </p>\n                <p style=\"color: green\">\n                  ▲{{ this.lsTotal - this.total }}({{\n                    ((this.lsTotal - this.total) / 10000).toFixed(2)\n                  }}%)\n                </p>\n              </div>\n            </div>\n          </el-card>\n          <el-card shadow=\"hover\" style=\"height: 300px; margin-top: 20px\">\n            <ve-line\n              height=\"300px\"\n              :data=\"chartData\"\n              :colors=\"colors\"\n              :extend=\"chartExtend\"\n              :settings=\"chartSettings\"\n            ></ve-line>\n          </el-card>\n          <el-card shadow=\"hover\" style=\"height: 275px; margin-top: 20px\">\n            <ve-pie :data=\"pieData\" :settings=\"pieSettings\" :extend=\"pieExtend\" ></ve-pie>\n          </el-card>\n        </el-col>\n        <el-col :span=\"16\">\n          <!--显示流程图-->\n          <el-card shadow=\"hover\">\n            <div style=\"height: 280px\"></div>\n          </el-card>\n          <!--左边最下面两个流程图-->\n          <div class=\"graph\">\n            <el-card shadow=\"hover\" style=\"height: 400px; margin-top: 20px\">\n              <ve-histogram height=\"400px\" :data=\"histogramData\" :settings=\"histogramSettings\" :extend=\"histogramExtend\">\n              </ve-histogram>\n            </el-card>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SideMenu from \"./SideMenu.vue\";\nimport \"echarts/lib/component/title\";\nimport { Total } from \"@/request/user.js\";\nexport default {\n  name: \"about\",\n  components: {\n    SideMenu,\n  },\n  data() {\n    this.colors = [\"#87CEFA\"];\n    this.chartExtend = {\n      series: {\n        smooth: false,\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"日志趋势\",\n        x: \"left\", //在图片中的x轴位置 left, right, middle\n        y: \"top\", //在图片中的y轴位置 top, bottom\n        textAlign: \"auto\", //整体（包括 text 和 subtext）的水平对齐 auto, left, right, center\n        textStyle: {\n          color: \"#000000\",\n          fontWeight: \"normal\",\n          fontSize: 12,\n        },\n      },\n    };\n    this.chartSettings = {\n      area: true,\n      scale: [true],\n    };\n    this.pieSettings= { \n      type: 'pie' ,\n\n      };\n    this.pieExtend={\n      series: {\n          center: ['30%', '30%'],\n          radius: '40%',\n          minAngle:15,\n        },\n        legend: {\n                type: 'scroll',  //设置超出部分滚动\n                orient: 'vertical',  //设置竖向排列\n                show:true,          //是否显示，默认开启\n                left: '70%',\n                top: 70,\n      }, \n        title: {\n        text: \"日志比例\",\n        x: \"left\", //在图片中的x轴位置 left, right, middle\n        y: \"top\", //在图片中的y轴位置 top, bottom\n        textAlign: \"auto\", //整体（包括 text 和 subtext）的水平对齐 auto, left, right, center\n        textStyle: {\n          color: \"#000000\",\n          fontWeight: \"normal\",\n          fontSize: 12,\n        },\n        \n    }};\n    this.histogramSettings={\n      type: 'histogram',\n    };\n    this.histogramExtend={\n      series: {\n        barWidth : 30\n        },\n        legend: {\n        show: false,\n      },\n      title: {\n        text: \"日志数量\",\n        x: \"left\", //在图片中的x轴位置 left, right, middle\n        y: \"top\", //在图片中的y轴位置 top, bottom\n        textAlign: \"auto\", //整体（包括 text 和 subtext）的水平对齐 auto, left, right, center\n        textStyle: {\n          color: \"#000000\",\n          fontWeight: \"normal\",\n          fontSize: 12,\n        },\n      },\n    };\n    return {\n      timer: \"\",\n      lsTotal: 0,\n      total: 1,\n      sqlTotal: 0,\n      lsSqlTotal: 0,\n      sqlConnect: false,\n      chartData: {\n        columns: [\"月份\", \"日志数\"],\n        rows: [\n          { 月份: \"1\", 日志数: \"0\" },\n          { 月份: \"2\", 日志数: \"0\" },\n          { 月份: \"3\", 日志数: \"0\" },\n          { 月份: \"4\", 日志数: \"0\" },\n          { 月份: \"5\", 日志数: \"0\" },\n        ],\n      },\n      pieData: {\n        columns: ['key', 'value'],\n        rows: [\n          {key: \"debug\", value: \"0\"},\n           {key: \"info\", value: \"0\"},\n            {key: \"warning\", value: \"0\"},\n             {key: \"error\", value: \"0\"},\n        ]\n      },\n      histogramData: {\n       columns: ['key', 'value'],\n        rows: [],\n      },\n    };\n  },\n  mounted() {\n  //  axios\n  //           .get('/api/v1/todo')\n  //           .then((res) => {\n  //               console.log(res.data) //    返回接口响应结果\n  //           })\n    Total().then((res) => {\n            this.sqlTotal = res.total;\n            this.lsSqlTotal = res.total;\n            if (this.sqlTotal != 0) this.sqlConnect = true;\n            //console.log(this.message);\n          });\n    \n    //console.log(this.lsTotal,  this.total);\n    const that = this;\n    this.timer = setInterval(function () {\n      if (that.sqlConnect) {\n        Total().then((res) => {\n            that.lsSqlTotal = res.total;\n            //console.log(this.message);\n          });\n      }\n    }, 10000);\n    this.timer = setInterval(function () {\n      if (that.$store.state.total > that.lsTotal) {\n        //日志数\n        that.lsTotal = that.$store.state.total;\n        //月份折线图\n        let today = new Date();\n        for (var i = 0; i < 5; i++) {\n          let month =\n            (today.getMonth() + 13 - 4 + i) % 12 == 0\n              ? 12\n              : (today.getMonth() + 13 - 4 + i) % 12;\n          that.$set(that.chartData.rows, i, {\n            月份: month + \"\",\n            日志数: that.$store.state.monthTotal[month - 1] + \"\",\n          });\n        }\n        //类别饼图\n        for (i = 0; i < 4; i++) {\n          that.$set(that.pieData.rows[i], \"value\", that.$store.state.levelTotal[i] + \"\");\n        }\n        //文件柱状图\n        for (i = that.histogramData.rows.length; i < that.$store.state.fileTotal.length; i++) {\n        that.histogramData.rows.push({key:that.$store.state.fileTotal[i].title, value: \"0\"});\n      }\n        for (i = 0; i < that.$store.state.fileTotal.length; i++) {\n          that.$set(that.histogramData.rows[i], \"value\", that.$store.state.fileTotal[i].total + \"\");\n        }\n      }\n    }, 100);\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  },\n};\n</script>\n\n<style>\n.home .total {\n  display: flex; /*对于一行会自动弹性布局*/\n  justify-content: space-between; /*表示水平两端对齐，justify-content：水平对齐的方式*/\n}\n.home .num {\n  display: flex; /*对于一行会自动弹性布局*/\n  flex-wrap: wrap; /*对于6个模块需要换行*/\n  justify-content: space-between; /*表示水平两端对齐，justify-content：水平对齐的方式*/\n}\n\n.home .num .el-card {\n  width: 32%;\n  margin-bottom: 20px; /*模块之前有间隔*/\n}\n\n.home .graph {\n  display: flex; /*对于一行会自动弹性布局*/\n  justify-content: space-between; /*表示水平两端对齐，justify-content：水平对齐的方式*/\n}\n\n.home .graph .el-card {\n  width: 100%;\n  margin-top: 20px; /*模块之前有间隔*/\n}\n</style>\n<style lang=\"stylus\" scoped>\n.about {\n  // 使用flex布局 菜单居左固定宽度 右侧内容区域自适应宽度\n  display: flex;\n\n  .about-left {\n    box-sizing: border-box;\n  }\n\n  .about-right {\n    box-sizing: border-box;\n    width: calc(100%);\n    padding: 8px 24px;\n    flex: 1;\n    height: 750px;\n  }\n}\n</style>"]}]}